{
  "permissions": {
    "allow": [
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(yamllint:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(diff:*)",
      "Bash(mv:*)",
      "WebFetch(domain:localhost)",
      "Bash(npm run lint)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm install:*)",
      "Bash(npm run format:*)",
      "Bash(cat:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run lint:*)",
      "Bash(timeout 30s npm run build)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(node:*)",
      "Bash(sed:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(for file in *.jsx)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(if grep -q \"export const renderConfig\" \"$file\")",
      "Bash(then echo \"✅ Has renderConfig\")",
      "Bash(else echo \"❌ Missing renderConfig\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(do if grep -q \"export const renderConfig\" \"$file\")",
      "Bash(then echo \"✅ $file\")",
      "Bash(else echo \"❌ $file\")",
      "Bash(for file in ask-javascript.jsx run-javascript.jsx tables-universal.jsx trace-javascript.jsx)",
      "Bash(echo:*)",
      "Bash(if grep -q \"^export const id\" \"$file\")",
      "Bash(then echo \"✅\")",
      "Bash(else echo \"❌\")",
      "Bash(if grep -q \"^export const label\" \"$file\")",
      "Bash(if grep -q \"^export const applicable\" \"$file\")",
      "Bash(if grep -q \"^export const execute\" \"$file\")",
      "Bash(if grep -q \"^export const config\" \"$file\")",
      "Bash(if grep -q \"^export const renderConfig\" \"$file\")",
      "Bash(echo)",
      "Bash(mkdir:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm start)",
      "Bash(PORT=3001 npm start)",
      "Bash(PORT=8080 npm start)",
      "Bash(pm2 list:*)",
      "Bash(PORT=8888 node server.js)",
      "Bash(git checkout:*)",
      "Bash(npm run:*)",
      "Bash(touch:*)",
      "Bash(flyctl logs:*)",
      "Bash(flyctl deploy:*)",
      "Bash(flyctl status:*)",
      "Bash(flyctl machine start:*)",
      "Bash(flyctl machine destroy:*)",
      "WebFetch(domain:study-lenses.fly.dev)",
      "Bash(flyctl ssh console:*)"
    ],
    "deny": []
  }
}